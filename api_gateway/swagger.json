{
  "swagger": "2.0",
  "info": {
    "title": "Jogo da Velha API Gateway",
    "description": "Gateway que integra serviços REST e SOAP para um jogo da velha",
    "version": "1.0.0"
  },
  "host": "localhost:5000",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "API Root",
        "description": "Retorna informações sobre a API e os links disponíveis",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Informações sobre a API"
          }
        }
      }
    },
    "/games": {
      "post": {
        "summary": "Criar novo jogo",
        "description": "Cria um novo jogo da velha com um jogador inicial",
        "parameters": [
          {
            "name": "player",
            "in": "body",
            "description": "Dados do jogador",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "playerName": {
                  "type": "string",
                  "description": "Nome do jogador"
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Jogo criado com sucesso"
          }
        }
      }
    },
    "/games/list": {
      "get": {
        "summary": "Listar jogos disponíveis",
        "description": "Lista todos os jogos aguardando um segundo jogador",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Lista de jogos disponíveis"
          }
        }
      }
    },
    "/games/{gameId}": {
      "get": {
        "summary": "Obter estado do jogo",
        "description": "Retorna o estado atual de um jogo",
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "ID do jogo",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Estado do jogo obtido com sucesso"
          },
          "404": {
            "description": "Jogo não encontrado"
          }
        }
      }
    },
    "/games/{gameId}/join": {
      "post": {
        "summary": "Entrar em um jogo existente",
        "description": "Permite que um segundo jogador entre em um jogo existente",
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "ID do jogo",
            "required": true,
            "type": "string"
          },
          {
            "name": "player",
            "in": "body",
            "description": "Dados do jogador",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "playerName": {
                  "type": "string",
                  "description": "Nome do jogador"
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Jogador entrou com sucesso"
          },
          "400": {
            "description": "Jogo já tem dois jogadores"
          },
          "404": {
            "description": "Jogo não encontrado"
          }
        }
      }
    },
    "/games/{gameId}/move": {
      "post": {
        "summary": "Fazer uma jogada",
        "description": "Executa um movimento no tabuleiro",
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "ID do jogo",
            "required": true,
            "type": "string"
          },
          {
            "name": "move",
            "in": "body",
            "description": "Dados da jogada",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "pos": {
                  "type": "integer",
                  "description": "Posição no tabuleiro (0-8)"
                },
                "jogador": {
                  "type": "string",
                  "description": "Símbolo do jogador (X ou O)"
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Movimento executado com sucesso"
          },
          "400": {
            "description": "Movimento inválido"
          },
          "404": {
            "description": "Jogo não encontrado"
          }
        }
      }
    },
    "/ranking/{nome}": {
      "get": {
        "summary": "Consultar ranking de jogador",
        "description": "Obtém o ranking de um jogador usando um serviço SOAP",
        "parameters": [
          {
            "name": "nome",
            "in": "path",
            "description": "Nome do jogador",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ranking obtido com sucesso"
          }
        }
      }
    },
    "/wsdl": {
      "get": {
        "summary": "Obter WSDL",
        "description": "Retorna o arquivo WSDL do serviço SOAP",
        "produces": [
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Arquivo WSDL"
          }
        }
      }
    }
  },
  "definitions": {
    "Tabuleiro": {
      "type": "array",
      "items": {
        "type": "string",
        "description": "Posição no tabuleiro ('X', 'O' ou vazio)"
      }
    },
    "Jogador": {
      "type": "object",
      "properties": {
        "nome": {
          "type": "string",
          "description": "Nome do jogador"
        },
        "simbolo": {
          "type": "string",
          "description": "Símbolo do jogador ('X' ou 'O')"
        }
      }
    },
    "Jogo": {
      "type": "object",
      "properties": {
        "tabuleiro": {
          "$ref": "#/definitions/Tabuleiro"
        },
        "turno": {
          "type": "string",
          "description": "Jogador atual ('X' ou 'O')"
        },
        "status": {
          "type": "string",
          "description": "Status do jogo ('waiting_opponent', 'in_progress', 'completed')"
        },
        "jogador_x": {
          "$ref": "#/definitions/Jogador"
        },
        "jogador_o": {
          "$ref": "#/definitions/Jogador"
        },
        "vencedor": {
          "type": "string",
          "description": "Vencedor do jogo ('X', 'O', 'empate' ou null)"
        },
        "_links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      }
    },
    "Link": {
      "type": "object",
      "properties": {
        "rel": {
          "type": "string",
          "description": "Nome da relação"
        },
        "href": {
          "type": "string",
          "description": "URL do recurso"
        },
        "method": {
          "type": "string",
          "description": "Método HTTP"
        },
        "description": {
          "type": "string",
          "description": "Descrição do link"
        }
      }
    },
    "Ranking": {
      "type": "object",
      "properties": {
        "nome": {
          "type": "string",
          "description": "Nome do jogador"
        },
        "ranking": {
          "type": "integer",
          "description": "Pontuação do jogador"
        },
        "tipo": {
          "type": "string",
          "description": "Tipo de serviço usado (SOAP)"
        }
      }
    }
  }
}
